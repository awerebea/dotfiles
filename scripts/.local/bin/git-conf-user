#!/usr/bin/env bash
# Transfer dotfiles from local host to remote using scp utility

# define users data
USER_0="awerebea"
EMAIL_0="awerebea.21@gmail.com"
SIGNING_KEY_0="9BCC286D7490EA90CB0B36D40D29164EF13B24BD"
USER_1="Andrei Bulgakov"
EMAIL_1="a.bulgakov.86@gmail.com"
SIGNING_KEY_1="3A9C9CF435A23DBB070281DE98DEAF83552D8DFA"
USER_2="Andrey Bulgakov"
EMAIL_2="andrey.bulgakov@clearscale.com"
SIGNING_KEY_2="9DD1905E14C478090420E5B99A0ED9EFED1FAFE2"
USER_3="Andrei Bulgakov"
EMAIL_3="a.bulgakov.work@gmail.com"
SIGNING_KEY_3="9BCC286D7490EA90CB0B36D40D29164EF13B24BD"
USER_4="Andrei Bulgakov"
EMAIL_4="andrei.bulgakov@opsfleet.com"
SIGNING_KEY_4="15B29A629D550FAB8E319DE2AF4333636A5E4E90"

GLOBAL=

SIGN_COMMITS=
SIGN_TAGS=
UNSET=

# Usage message
usage() {
    local MESSAGE=
    read -r -d '' MESSAGE <<__EOM__ || true
usage: ${0} [OPTIONS] USERNAME [-h|--help]
Configure the git username and email address for the current git repository (default)
or globally for the current user.

USERNAME:
  0, awerebea           User data: ${USER_0} <${EMAIL_0}>

  1, personal           User data: ${USER_1} <${EMAIL_1}>

  2, work               User data: ${USER_2} <${EMAIL_2}>

  3, a.bulgakov.work    User data: ${USER_3} <${EMAIL_3}>

  4, opsfleet           User data: ${USER_4} <${EMAIL_4}>

OPTIONS:
  -c, --sign-commits    Sign all commits automattically

  -t, --sign-tags       Sign all tags automattically

  -u, --unset           Unset selected option(s) but keep username/email

  -g, --global          Apply settings globally for the current user



  -h, --help            Print this help message and exit
__EOM__
    echo "$MESSAGE"
    return
}

# variables list
USERNAME=
USEREMAIL=
SIGNING_KEY=

# Process command line options
while [[ -n "$1" ]]; do
    case "$1" in
    -g | --global)
        GLOBAL='global'
        ;;
    -c | --sign-commits)
        SIGN_COMMITS='true'
        ;;
    -t | --sign-tags)
        SIGN_TAGS='true'
        ;;
    -u | --unset)
        UNSET='--unset'
        ;;
    0 | awerebea)
        USERNAME="$USER_0"
        USEREMAIL="$EMAIL_0"
        SIGNING_KEY="$SIGNING_KEY_0"
        ;;
    1 | personal)
        USERNAME="$USER_1"
        USEREMAIL="$EMAIL_1"
        SIGNING_KEY="$SIGNING_KEY_1"
        ;;
    2 | work)
        USERNAME="$USER_2"
        USEREMAIL="$EMAIL_2"
        SIGNING_KEY="$SIGNING_KEY_2"
        ;;
    3 | a.bulgakov.work)
        USERNAME="$USER_3"
        USEREMAIL="$EMAIL_3"
        SIGNING_KEY="$SIGNING_KEY_3"
        ;;
    4 | opsfleet)
        USERNAME="$USER_4"
        USEREMAIL="$EMAIL_4"
        SIGNING_KEY="$SIGNING_KEY_4"
        ;;
    -h | --help)
        usage
        exit
        ;;
    *)
        usage
        exit 1
        ;;
    esac
    shift
done

# check if all required arguments are specified
if [[ -z ${USERNAME} ]]; then
    usage
    exit 1
fi

git config --"${GLOBAL:-local}" user.name "$USERNAME"
git config --"${GLOBAL:-local}" user.email "$USEREMAIL"
git config --"${GLOBAL:-local}" user.signingkey "$SIGNING_KEY"

if [[ -n ${SIGN_COMMITS} ]]; then
    git config --"${GLOBAL:-local}" "${UNSET:+"$UNSET"}" commit.gpgsign true
fi

if [[ -n ${SIGN_TAGS} ]]; then
    git config --"${GLOBAL:-local}" "${UNSET:+"$UNSET"}" tag.gpgSign true
fi

git config --list --show-origin |
    grep -e user.name -e user.email -e commit.gpgsign -e tag.gpgsign
