#!/usr/bin/env bash

if [ "$#" -lt 1 ]; then
    printf "The desired AWS profile(s) must be passed as arguments.\n" >&2
    exit 1
fi

envs_raw=("$@")
VALID_ENVS=(torana-{dev,test,stage,prod,audit,shared,p2dev,p2test} hnb-cp-dev)

# Remove duplicates
declare -A seen_elements
envs=()

for element in "${envs_raw[@]}"; do
    if [ "${seen_elements[$element]}" = "" ]; then
        envs+=("$element")
        seen_elements["$element"]=1
    fi
done

# Check if the passed envs are valid
for env in "${envs[@]}"; do
    # shellcheck disable=SC2076
    if [[ ! "${VALID_ENVS[*]}" =~ "$env" ]]; then
        echo "Invalid environment passed." >&2
        exit 1
    fi
done

creds="$HOME/.aws/credentials"
creds_temp="$HOME/.aws/tmp-creds/tmp.credentials"
creds_addon="$HOME/.aws/credentials_addon"
creds_temp_dir="$(dirname "$creds_temp")"

mkdir -p "$creds_temp_dir" 2>/dev/null
echo >"$creds_temp"
for i in "${envs[@]}"; do
    aws-vault exec "$i" --json >"$creds_temp_dir/$i.json"
    {
        echo "[$i]"
        echo -n aws_access_key_id=
        jq .AccessKeyId "$creds_temp_dir/$i.json"
        echo
        echo -n aws_secret_access_key=
        jq .SecretAccessKey "$creds_temp_dir/$i.json"
        echo
        echo -n aws_session_token=
        jq .SessionToken "$creds_temp_dir/$i.json"
        echo
    } \
        >>"$creds_temp"
done
cp "$creds_temp" "$creds"

[ -f "$creds_addon" ] && echo >>"$creds_temp" && cat "$creds_addon" >>"$creds"
