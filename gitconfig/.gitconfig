[core]
	excludesfile = /home/andrei/.gitignore
	pager = less -x1,5
	autocrlf = input

[includeIf "gitdir:~/"]
	path = ~/.gitconfig.home
[includeIf "gitdir:~/Projects/"]
	path = ~/.gitconfig.work
[includeIf "gitdir:~/work/"]
	path = ~/.gitconfig.work

[merge]
tool = vim_mergetool
conflictstyle = diff3
[mergetool]
	keepBackup = false
[mergetool "vim_mergetool"]
cmd = vim -f -c "MergetoolStart" "$MERGED" "$BASE" "$LOCAL" "$REMOTE"
trustExitCode = true
; [merge]
;     tool = extMerge
; [mergetool "extMerge"]
;     cmd = extMerge \"$BASE\" \"$LOCAL\" \"$REMOTE\" \"$MERGED\"
;     trustExitCode = false

[diff "gpg"]
	textconv = gpg -qd --no-tty
[diff]
	tool = vimdiff

[pager]
	diff = delta
	log = delta
	show = delta
	whatchanged = delta
	show-branch = true
	; status = true

[interactive]
	diffFilter = delta --color-only

[delta]
	features = line-numbers decorations
	whitespace-error-style = 22 reverse
	navigate = true
	tabs = 4
	side-by-side = false

	; folke/tokyonight theme
	; minus-style                   = syntax "#37222c"
	; minus-non-emph-style          = syntax "#37222c"
	; minus-emph-style              = syntax "#713137"
	; minus-empty-line-marker-style = syntax "#37222c"
	; plus-style                    = syntax "#20303b"
	; plus-non-emph-style           = syntax "#20303b"
	; plus-emph-style               = syntax "#2c5a66"
	; plus-empty-line-marker-style  = syntax "#20303b"
	; line-numbers-minus-style      = "#c25d64"
	; line-numbers-zero-style       = "#3b4261"
	; line-numbers-plus-style       = "#399a96"

	; catppuccin-mocha theme
	blame-palette = "#1e1e2e #181825 #11111b #313244 #45475a"
	; commit-decoration-style = "box ul"
	dark = true
	; file-decoration-style = "#cdd6f4"
	; file-style = "#cdd6f4"
	hunk-header-decoration-style = "box ul #2c5a66"
	; hunk-header-file-style = "bold"
	; hunk-header-line-number-style = "bold #a6adc8"
	hunk-header-style = "file line-number syntax"
	line-numbers = true
	line-numbers-left-style = "#6c7086"
	line-numbers-minus-style = "#f38ba8"
	line-numbers-plus-style = "#a6e3a1"
	line-numbers-right-style = "#6c7086"
	line-numbers-zero-style = "#6c7086"
	# 25% red 75% base
	minus-emph-style = "bold syntax #53394c"
	# 10% red 90% base
	minus-style = "syntax #35293b"
	# 25% green 75% base
	plus-emph-style = "bold syntax #40504b"
	# 10% green 90% base
	plus-style = "syntax #2c333a"
	map-styles = \
		bold purple => syntax "#494060", \
		bold blue => syntax "#394361", \
		bold cyan => syntax "#384d5e", \
		bold yellow => syntax "#544f4e"
	# Should match the name of the bat theme
	syntax-theme = "Catppuccin-Mocha"

[delta "decorations"]
	commit-decoration-style = bold yellow box ul
	file-style = bold yellow ul
	file-decoration-style = none
	hunk-header-decoration-style = cyan box ul

[delta "line-numbers"]
	line-numbers-left-style = cyan
	line-numbers-right-style = cyan
	line-numbers-zero-style = 244
	line-numbers-minus-style = 196
	line-numbers-plus-style = 34
[init]
	defaultBranch = main
[alias]
	ls-files-root = ! git ls-files
	log-merge = "!f() { git log --stat \"$1^..$1\"; }; f"
	log-merge-short = "!f() { git log --pretty=oneline \"$1^..$1\"; }; f"
	fixup = ! git add --update && git commit --fixup=${1:-$(git rev-parse HEAD)} && GIT_EDITOR=true git rebase --interactive --autosquash ${1:-$(git rev-parse HEAD~2)}~1
	root = "rev-parse --show-toplevel"
	find-merge = "!sh -c 'commit=$0 && branch=${1:-HEAD} && (git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n) | sort -k2 -s | uniq -f1 -d | sort -n | tail -1 | cut -f2'"
	show-merge = "!sh -c 'merge=$(git find-merge $0 $1) && [ -n \"$merge\" ] && git show $merge'"
	add-fetch = "!f() { \
		REMOTE=\"${1:-origin}\"; \
		git config --add \"remote.${REMOTE}.fetch\" \"+refs/heads/*:refs/remotes/${REMOTE}/*\"; \
		echo \"Added fetch configuration for remote '${REMOTE}'\"; \
		git config --get-all \"remote.${REMOTE}.fetch\"; \
	}; f"
	set-upstream = "!f() { \
		REMOTE=\"${1:-origin}\"; \
		CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD); \
		git branch --set-upstream-to=${REMOTE}/${CURRENT_BRANCH} ${CURRENT_BRANCH}; \
		echo \"Upstream set to '${REMOTE}/${CURRENT_BRANCH}' for branch '${CURRENT_BRANCH}'\"; \
	}; f"
	set-sshkey = "!f() { \
		SSH_KEY=\"${1:-~/.ssh/id_rsa}\"; \
		git config core.sshCommand \"ssh -i ${SSH_KEY}\"; \
		echo \"SSH command set to use key: ${SSH_KEY}\"; \
	}; f"
[rerere]
	enabled = true
[fetch]
	prune = true
[push]
	autoSetupRemote = true
[pull]
	default = current
	; rebase = merges
