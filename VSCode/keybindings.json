// vim: ft=jsonc
// Place your key bindings in this file to override the defaultsauto[]
[
    // Use CapsLock as Esc
    {
        "key": "capslock",
        "command": "extension.vim_escape",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    // Toggle auto hard-wrap long lines
    {
        "key": "shift+alt+q",
        "command": "rewrap.toggleAutoWrap"
    },
    // Toggle block comment
    {
        "key": "ctrl+shift+/",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    // Move between windows like in Vim, Tmux
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
        "when": "vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight",
        "when": "vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp",
        "when": "vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown",
        "when": "vim.mode != 'Insert'"
    },
    // Resize editor window
    {
        "key": "ctrl+shift+[",
        "command": "workbench.action.decreaseViewHeight",
        "when": "vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+shift+]",
        "command": "workbench.action.increaseViewHeight",
        "when": "vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+alt+[",
        "command": "workbench.action.decreaseViewWidth",
        "when": "vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+alt+]",
        "command": "workbench.action.increaseViewWidth",
        "when": "vim.mode != 'Insert'"
    },
    // Resize terminal window
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.terminal.resizePaneLeft",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.terminal.resizePaneDown",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.action.terminal.resizePaneUp",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+l",
        "command": "workbench.action.terminal.resizePaneRight",
        "when": "terminalFocus && terminalProcessSupported"
    },
    // Toggle minimap
    {
        "key": "alt+m",
        "command": "editor.action.toggleMinimap",
        "when": "vim.mode != 'Insert'"
    },
    // Toggle sidebar
    {
        "key": "f2",
        "command": "workbench.action.toggleSidebarVisibility"
        // "when": "!sideBarFocus",
    },
    {
        "key": "q",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    // {
    //     "key": "space e",
    //     "command": "workbench.action.toggleSidebarVisibility",
    //     "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    // },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    // Maximaze panel (terminal)
    {
        "key": "ctrl+a z",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "terminalFocus"
    },
    // Use ctrl+j, ctrl+k instead of arrows in lists menus
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    // List. refer to e.g. search and usages lists
    {
        "key": "l",
        "command": "list.expand",
        "when": "vim.active && listFocus && !inputFocus"
    },
    {
        "key": "h",
        "command": "list.collapse",
        "when": "vim.active && listFocus && !inputFocus"
    },
    // Code suggestion selection
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "vim.active && suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "vim.active && suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    // Top panel for file search and commands
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "vim.active && inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "vim.active && inQuickOpen"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "vim.active && inQuickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "vim.active && inQuickOpen"
    },
    // Move between editors
    {
        "key": "ctrl+alt+l",
        "command": "workbench.action.nextEditor",
        "when": "vim.mode  == 'Normal'"
    },
    {
        "key": "tab",
        "command": "workbench.action.nextEditor",
        "when": "vim.mode  == 'Normal' && !terminalFocus"
    },
    {
        "key": "ctrl+alt+h",
        "command": "workbench.action.previousEditor",
        "when": "vim.mode  == 'Normal'"
    },
    {
        "key": "shift+tab",
        "command": "workbench.action.previousEditor",
        "when": "vim.mode == 'Normal' && !terminalFocus"
    },
    // Insert tab
    {
        "key": "ctrl+alt+v tab",
        "command": "type",
        "args": {
            "text": "\t"
        },
        "when": "editorTextFocus"
    },
    // File-explorer navigation
    {
        "key": "j",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "k",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "enter",
        "command": "list.select",
        "when": "explorerViewletVisible && filesExplorerFocus"
    },
    {
        "key": "o",
        "command": "list.toggleExpand",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "a",
        "command": "explorer.newFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "shift+a",
        "command": "explorer.newFolder",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    // Show "hover" documentation
    {
        "key": "shift+k",
        "command": "editor.action.showHover",
        "when": "editorTextFocus && vim.mode != 'Insert'"
    },
    // Toggle activity bar
    {
        "key": "ctrl+shift+a",
        "command": "workbench.action.toggleActivityBarVisibility"
    },
    {
        "key": "tab",
        "command": "extension.vim_tab",
        "when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert' && editorLangId != 'magit'"
    },
    {
        "key": "tab",
        "command": "-extension.vim_tab",
        "when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "x",
        "command": "magit.discard-at-point",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
    },
    {
        "key": "k",
        "command": "-magit.discard-at-point"
    },
    {
        "key": "-",
        "command": "magit.reverse-at-point",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
    },
    {
        "key": "v",
        "command": "-magit.reverse-at-point"
    },
    {
        "key": "shift+-",
        "command": "magit.reverting",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
    },
    {
        "key": "shift+v",
        "command": "-magit.reverting"
    },
    {
        "key": "shift+o",
        "command": "magit.resetting",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
    },
    {
        "key": "shift+x",
        "command": "-magit.resetting"
    },
    {
        "key": "x",
        "command": "-magit.reset-mixed"
    },
    {
        "key": "ctrl+u x",
        "command": "-magit.reset-hard"
    },
    {
        "key": "y",
        "command": "-magit.show-refs"
    },
    {
        "key": "y",
        "command": "vspacecode.showMagitRefMenu",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+l",
        "command": "acceptSelectedSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+j",
        "command": "showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "ctrl+k",
        "command": "showPrevParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "ctrl+h",
        "command": "file-browser.stepOut",
        "when": "inFileBrowser"
    },
    {
        "key": "ctrl+l",
        "command": "file-browser.stepIn",
        "when": "inFileBrowser"
    }
]
