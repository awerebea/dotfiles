// vim: ft=jsonc
// Place your key bindings in this file to override the defaultsauto[]
[
    // Neovim keybindings
    // Use CapsLock as Esc
    {
        "key": "capslock",
        "command": "vscode-neovim.escape"
    },
    // Toggle auto hard-wrap long lines
    {
        "key": "shift+alt+q",
        "command": "rewrap.toggleAutoWrap"
    },
    // Toggle block comment
    {
        "key": "ctrl+shift+/",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    // Move between windows like in Vim, Tmux
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
        "when": "neovim.mode != insert && !terminalFocus"
    },
    // {
    //     "key": "ctrl+h",
    //     "command": "workbench.action.terminal.focusPreviousPane",
    //     "when": "terminalFocus && terminalProcessSupported"
    // },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight",
        "when": "neovim.mode != insert && !terminalFocus"
    },
    // {
    //     "key": "ctrl+l",
    //     "command": "workbench.action.terminal.focusNextPane",
    //     "when": "terminalFocus && terminalProcessSupported"
    // },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp",
        "when": "neovim.mode != insert && !terminalFocus"
    },
    {
        "key": "ctrl+alt+shift+k",
        "command": "workbench.action.navigateUp",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown",
        "when": "neovim.mode != insert && !terminalFocus"
    },
    // Resize editor window
    {
        "key": "ctrl+shift+[",
        "command": "workbench.action.decreaseViewHeight",
        "when": "neovim.mode != insert"
    },
    {
        "key": "ctrl+shift+]",
        "command": "workbench.action.increaseViewHeight",
        "when": "neovim.mode != insert"
    },
    {
        "key": "ctrl+alt+[",
        "command": "workbench.action.decreaseViewWidth",
        "when": "neovim.mode != insert"
    },
    {
        "key": "ctrl+alt+]",
        "command": "workbench.action.increaseViewWidth",
        "when": "neovim.mode != insert"
    },
    {
        "key": "ctrl+alt+f",
        "command": "workbench.action.toggleEditorWidths",
        "when": "neovim.mode != insert"
    },
    // Resize terminal window
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.terminal.resizePaneLeft",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.terminal.resizePaneDown",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.action.terminal.resizePaneUp",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+l",
        "command": "workbench.action.terminal.resizePaneRight",
        "when": "terminalFocus && terminalProcessSupported"
    },
    // Toggle minimap
    {
        "key": "alt+m",
        "command": "editor.action.toggleMinimap",
        "when": "neovim.mode != insert"
    },
    // Toggle sidebar
    {
        "key": "f2",
        "command": "workbench.action.toggleSidebarVisibility"
        // "when": "!sideBarFocus",
    },
    {
        "key": "q",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    // Maximaze panel (terminal)
    {
        "key": "ctrl+b z",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "terminalFocus"
    },
    // Move between editors
    {
        "key": "ctrl+alt+l",
        "command": "workbench.action.nextEditor",
        "when": "neovim.mode == normal"
    },
    {
        "key": "tab",
        "command": "workbench.action.nextEditor",
        "when": "neovim.mode  == normal && !terminalFocus"
    },
    {
        "key": "ctrl+alt+h",
        "command": "workbench.action.previousEditor",
        "when": "neovim.mode == normal"
    },
    {
        "key": "shift+tab",
        "command": "workbench.action.previousEditor",
        "when": "neovim.mode == normal && !terminalFocus"
    },
    // Insert tab
    {
        "key": "ctrl+alt+v tab",
        "command": "type",
        "args": {
            "text": "\t"
        },
        "when": "editorTextFocus"
    },
    // Use ctrl+j, ctrl+k instead of arrows in lists menus
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    // List. refer to e.g. search and usages lists
    {
        "key": "l",
        "command": "list.expand",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "h",
        "command": "list.collapse",
        "when": "listFocus && !inputFocus"
    },
    // File-explorer navigation
    {
        "key": "j",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "k",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "enter",
        "command": "list.select",
        "when": "explorerViewletVisible && filesExplorerFocus"
    },
    {
        "key": "o",
        "command": "list.toggleExpand",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "a",
        "command": "explorer.newFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "shift+a",
        "command": "explorer.newFolder",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    // Toggle activity bar
    {
        "key": "ctrl+shift+a",
        "command": "workbench.action.toggleActivityBarVisibility"
    },
    // Top panel for file search and commands
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus && !terminalFocus"
    },
    {
        "key": "ctrl+l",
        "command": "acceptSelectedSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus && !terminalFocus"
    },
    {
        "key": "ctrl+j",
        "command": "showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "ctrl+k",
        "command": "showPrevParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible && !terminalFocus"
    },
    {
        "key": "ctrl+h",
        "command": "file-browser.stepOut",
        "when": "inFileBrowser && !terminalFocus"
    },
    {
        "key": "ctrl+l",
        "command": "file-browser.stepIn",
        "when": "inFileBrowser && !terminalFocus"
    },
    {
        "key": "ctrl+shift+v",
        "command": "markdown.showPreview",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+shift+v",
        "command": "-markdown.showPreview",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+shift+v",
        "command": "markdown.extension.closePreview",
        "when": "markdownPreviewFocus && !terminalFocus"
    },
    {
        "key": "ctrl+shift+v",
        "command": "-markdown.extension.closePreview",
        "when": "markdownPreviewFocus"
    },
    {
        "key": "ctrl+alt+g",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "ctrl+alt+k ctrl+q",
        "command": "workbench.action.navigateToLastEditLocation"
    },
    {
        "key": "ctrl+k ctrl+q",
        "command": "-workbench.action.navigateToLastEditLocation"
    },
    {
        "key": "ctrl+alt+k f12",
        "command": "editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+k f12",
        "command": "-editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+shift+alt+o",
        "command": "workbench.action.showAllSymbols"
    },
    {
        "key": "ctrl+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "alt+f12",
        "command": "editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+shift+f10",
        "command": "-editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+shift+alt+n",
        "command": "code-runner.run"
    },
    {
        "key": "ctrl+alt+n",
        "command": "-code-runner.run"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "workbench.action.showTreeHover",
        "when": "customTreeView && listFocus && !inputFocus && !terminalFocus"
    },
    {
        "key": "ctrl+k r",
        "command": "workbench.action.files.revealActiveFileInWindows",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+o",
        "command": "workbench.action.files.openLocalFolder",
        "when": "remoteFileDialogVisible && !terminalFocus"
    },
    {
        "key": "ctrl+k p",
        "command": "workbench.action.files.copyPathOfActiveFile",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k up",
        "command": "views.moveViewUp",
        "when": "focusedView != '' && !terminalFocus"
    },
    {
        "key": "ctrl+k right",
        "command": "views.moveViewRight",
        "when": "focusedView != '' && !terminalFocus"
    },
    {
        "key": "ctrl+k left",
        "command": "views.moveViewLeft",
        "when": "focusedView != '' && !terminalFocus"
    },
    {
        "key": "ctrl+k down",
        "command": "views.moveViewDown",
        "when": "focusedView != '' && !terminalFocus"
    },
    {
        "key": "ctrl+k f2",
        "command": "togglePeekWidgetFocus",
        "when": "!terminalFocus && (inReferenceSearchEditor || referenceSearchVisible)"
    },
    {
        "key": "ctrl+k v",
        "command": "markdown.extension.closePreview",
        "when": "markdownPreviewFocus && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+e",
        "command": "keybindings.editor.defineWhenExpression",
        "when": "inKeybindings && keybindingFocus && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+a",
        "command": "keybindings.editor.addKeybinding",
        "when": "inKeybindings && keybindingFocus && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "editor.action.defineKeybinding",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'jsonc' && !terminalFocus"
    },
    {
        "key": "ctrl+k f",
        "command": "workbench.action.closeFolder",
        "when": "emptyWorkspaceSupport && workbenchState != 'empty' && !terminalFocus"
    },
    {
        "key": "ctrl+k shift+enter",
        "command": "workbench.action.unpinEditor",
        "when": "activeEditorIsPinned && !terminalFocus"
    },
    {
        "key": "ctrl+k z",
        "command": "workbench.action.toggleZenMode",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+h",
        "command": "workbench.action.output.toggleOutput",
        "when": "workbench.panel.output.active && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "workbench.action.splitEditorOrthogonal",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+shift+\\",
        "command": "workbench.action.splitEditorInGroup",
        "when": "activeEditorCanSplitInGroup && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+p",
        "command": "workbench.action.showAllEditors",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k shift+enter",
        "command": "workbench.action.pinEditor",
        "when": "!activeEditorIsPinned && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+pageup",
        "command": "workbench.action.previousEditorInGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+pagedown",
        "command": "workbench.action.nextEditorInGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k up",
        "command": "workbench.action.moveActiveEditorGroupUp",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k right",
        "command": "workbench.action.moveActiveEditorGroupRight",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k left",
        "command": "workbench.action.moveActiveEditorGroupLeft",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k down",
        "command": "workbench.action.moveActiveEditorGroupDown",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k enter",
        "command": "workbench.action.keepEditor",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+shift+\\",
        "command": "workbench.action.joinEditorInGroup",
        "when": "sideBySideEditorActive && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+right",
        "command": "workbench.action.focusRightGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "workbench.action.focusLeftGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+down",
        "command": "workbench.action.focusBelowGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+up",
        "command": "workbench.action.focusAboveGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k u",
        "command": "workbench.action.closeUnmodifiedEditors",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k w",
        "command": "workbench.action.closeEditorsInGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+w",
        "command": "workbench.action.closeAllEditors",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+shift+w",
        "command": "workbench.action.closeAllGroups",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+]",
        "command": "editor.unfoldRecursively",
        "when": "editorTextFocus && foldingEnabled && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+=",
        "command": "editor.unfoldAllExcept",
        "when": "editorTextFocus && foldingEnabled && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+9",
        "command": "editor.unfoldAllMarkerRegions",
        "when": "editorTextFocus && foldingEnabled && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+j",
        "command": "editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+x",
        "command": "editor.action.trimTrailingWhitespace",
        "when": "editorTextFocus && !editorReadonly && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+l",
        "command": "editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "editor.action.showHover",
        "when": "editorTextFocus && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+b",
        "command": "editor.action.setSelectionAnchor",
        "when": "editorTextFocus && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "editor.action.selectFromAnchorToCursor",
        "when": "editorTextFocus && selectionAnchorSet && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+.",
        "command": "editor.removeManualFoldingRanges",
        "when": "editorTextFocus && foldingEnabled && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+u",
        "command": "editor.action.removeCommentLine",
        "when": "editorTextFocus && !editorReadonly && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+s",
        "command": "workbench.action.openGlobalKeybindings",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+t",
        "command": "workbench.action.selectTheme",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+shift+\\",
        "command": "notebook.cell.split",
        "when": "notebookCellEditable && notebookEditable && notebookEditorFocused && !terminalFocus"
    },
    {
        "key": "ctrl+k t",
        "command": "notebook.cell.expandCellOutput",
        "when": "notebookCellListFocused && notebookCellOutputIsCollapsed && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "notebook.cell.expandCellInput",
        "when": "notebookCellInputIsCollapsed && notebookCellListFocused && !terminalFocus"
    },
    {
        "key": "ctrl+k t",
        "command": "notebook.cell.collapseCellOutput",
        "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "notebook.cell.collapseCellInput",
        "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed && !terminalFocus"
    },
    {
        "key": "ctrl+k",
        "command": "vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert' && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+d",
        "command": "editor.action.moveSelectionToNextFindMatch",
        "when": "editorFocus && !terminalFocus"
    },
    {
        "key": "ctrl+k v",
        "command": "markdown.showPreviewToSide",
        "when": "!notebookEditorFocused && editorLangId == 'markdown' && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+r",
        "command": "workbench.action.keybindingsReference",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+n",
        "command": "git.unstageSelectedRanges",
        "when": "isInDiffEditor && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+alt+s",
        "command": "git.stageSelectedRanges",
        "when": "isInDiffEditor && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+r",
        "command": "git.revertSelectedRanges",
        "when": "isInDiffEditor && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly && !terminalFocus"
    },
    {
        "key": "ctrl+k m",
        "command": "workbench.action.editor.changeLanguageMode",
        "when": "!notebookEditorFocused && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+,",
        "command": "editor.createFoldingRangeFromSelection",
        "when": "editorTextFocus && foldingEnabled && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode && !terminalFocus"
    },
    {
        "key": "ctrl+k e",
        "command": "workbench.files.action.focusOpenEditorsView",
        "when": "workbench.explorer.openEditorsView.active && !terminalFocus"
    },
    {
        "key": "ctrl+k c",
        "command": "workbench.files.action.compareWithClipboard",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k d",
        "command": "workbench.files.action.compareWithSaved",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+alt+c",
        "command": "copyFilePath",
        "when": "editorFocus && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+shift+alt+c",
        "command": "copyRelativeFilePath",
        "when": "editorFocus && !terminalFocus"
    },
    {
        "key": "ctrl+k o",
        "command": "workbench.action.files.showOpenedFileInNewWindow",
        "when": "emptyWorkspaceSupport && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+o",
        "command": "workbench.action.files.openFolder",
        "when": "openFolderWorkspaceSupport && !terminalFocus"
    },
    {
        "key": "ctrl+k s",
        "command": "workbench.action.files.saveWithoutFormatting",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+0",
        "command": "editor.foldAll",
        "when": "editorTextFocus && foldingEnabled && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+/",
        "command": "editor.foldAllBlockComments",
        "when": "editorTextFocus && foldingEnabled && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+8",
        "command": "editor.foldAllMarkerRegions",
        "when": "editorTextFocus && foldingEnabled && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+-",
        "command": "editor.foldAllExcept",
        "when": "editorTextFocus && foldingEnabled && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+1",
        "command": "editor.foldLevel1",
        "when": "editorTextFocus && foldingEnabled && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+2",
        "command": "editor.foldLevel2",
        "when": "editorTextFocus && foldingEnabled && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+3",
        "command": "editor.foldLevel3",
        "when": "editorTextFocus && foldingEnabled && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+4",
        "command": "editor.foldLevel4",
        "when": "editorTextFocus && foldingEnabled && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+5",
        "command": "editor.foldLevel5",
        "when": "editorTextFocus && foldingEnabled && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+6",
        "command": "editor.foldLevel6",
        "when": "editorTextFocus && foldingEnabled && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+7",
        "command": "editor.foldLevel7",
        "when": "editorTextFocus && foldingEnabled && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+[",
        "command": "editor.foldRecursively",
        "when": "editorTextFocus && foldingEnabled && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+f",
        "command": "editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly && !terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "-editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k m",
        "command": "-workbench.action.editor.changeLanguageMode",
        "when": "!notebookEditorFocused"
    },
    {
        "key": "ctrl+k ctrl+,",
        "command": "-editor.createFoldingRangeFromSelection",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "key": "ctrl+k e",
        "command": "-workbench.files.action.focusOpenEditorsView",
        "when": "workbench.explorer.openEditorsView.active"
    },
    {
        "key": "ctrl+k c",
        "command": "-workbench.files.action.compareWithClipboard"
    },
    {
        "key": "ctrl+k d",
        "command": "-workbench.files.action.compareWithSaved"
    },
    {
        "key": "ctrl+k ctrl+alt+c",
        "command": "-copyFilePath",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+k ctrl+shift+alt+c",
        "command": "-copyRelativeFilePath",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+k o",
        "command": "-workbench.action.files.showOpenedFileInNewWindow",
        "when": "emptyWorkspaceSupport"
    },
    {
        "key": "ctrl+k ctrl+o",
        "command": "-workbench.action.files.openFolder",
        "when": "openFolderWorkspaceSupport"
    },
    {
        "key": "ctrl+k s",
        "command": "-workbench.action.files.saveWithoutFormatting"
    },
    {
        "key": "ctrl+k ctrl+0",
        "command": "-editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+[IntlBackslash]",
        "command": "-editor.foldAllBlockComments",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+shift+[Backslash]",
        "command": "-editor.foldAllBlockComments",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+/",
        "command": "-editor.foldAllBlockComments",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+8",
        "command": "-editor.foldAllMarkerRegions",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+-",
        "command": "-editor.foldAllExcept",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+1",
        "command": "-editor.foldLevel1",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+2",
        "command": "-editor.foldLevel2",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+3",
        "command": "-editor.foldLevel3",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+4",
        "command": "-editor.foldLevel4",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+5",
        "command": "-editor.foldLevel5",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+6",
        "command": "-editor.foldLevel6",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+7",
        "command": "-editor.foldLevel7",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+[",
        "command": "-editor.foldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+f",
        "command": "-editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+r",
        "command": "-git.revertSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+k ctrl+alt+s",
        "command": "-git.stageSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+k ctrl+n",
        "command": "-git.unstageSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+k ctrl+r",
        "command": "-workbench.action.keybindingsReference"
    },
    {
        "key": "ctrl+k v",
        "command": "-markdown.showPreviewToSide",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+k ctrl+d",
        "command": "-editor.action.moveSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+k",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "-notebook.cell.collapseCellInput",
        "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
    },
    {
        "key": "ctrl+k t",
        "command": "-notebook.cell.collapseCellOutput",
        "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "-notebook.cell.expandCellInput",
        "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
    },
    {
        "key": "ctrl+k t",
        "command": "-notebook.cell.expandCellOutput",
        "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
    },
    {
        "key": "ctrl+k ctrl+shift+\\",
        "command": "-notebook.cell.split",
        "when": "notebookCellEditable && notebookEditable && notebookEditorFocused"
    },
    {
        "key": "ctrl+k ctrl+t",
        "command": "-workbench.action.selectTheme"
    },
    {
        "key": "ctrl+k ctrl+s",
        "command": "-workbench.action.openGlobalKeybindings"
    },
    {
        "key": "ctrl+k ctrl+u",
        "command": "-editor.action.removeCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+.",
        "command": "-editor.removeManualFoldingRanges",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "-editor.action.selectFromAnchorToCursor",
        "when": "editorTextFocus && selectionAnchorSet"
    },
    {
        "key": "ctrl+k ctrl+b",
        "command": "-editor.action.setSelectionAnchor",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+l",
        "command": "-editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+x",
        "command": "-editor.action.trimTrailingWhitespace",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+j",
        "command": "-editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+9",
        "command": "-editor.unfoldAllMarkerRegions",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+=",
        "command": "-editor.unfoldAllExcept",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+]",
        "command": "-editor.unfoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+shift+w",
        "command": "-workbench.action.closeAllGroups"
    },
    {
        "key": "ctrl+k ctrl+w",
        "command": "-workbench.action.closeAllEditors"
    },
    {
        "key": "ctrl+k w",
        "command": "-workbench.action.closeEditorsInGroup"
    },
    {
        "key": "ctrl+k u",
        "command": "-workbench.action.closeUnmodifiedEditors"
    },
    {
        "key": "ctrl+k ctrl+up",
        "command": "-workbench.action.focusAboveGroup"
    },
    {
        "key": "ctrl+k ctrl+down",
        "command": "-workbench.action.focusBelowGroup"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+k ctrl+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+k ctrl+shift+\\",
        "command": "-workbench.action.joinEditorInGroup",
        "when": "sideBySideEditorActive"
    },
    {
        "key": "ctrl+k enter",
        "command": "-workbench.action.keepEditor"
    },
    {
        "key": "ctrl+k down",
        "command": "-workbench.action.moveActiveEditorGroupDown"
    },
    {
        "key": "ctrl+k left",
        "command": "-workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "ctrl+k right",
        "command": "-workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "ctrl+k up",
        "command": "-workbench.action.moveActiveEditorGroupUp"
    },
    {
        "key": "ctrl+k ctrl+pagedown",
        "command": "-workbench.action.nextEditorInGroup"
    },
    {
        "key": "ctrl+k ctrl+pageup",
        "command": "-workbench.action.previousEditorInGroup"
    },
    {
        "key": "ctrl+k shift+enter",
        "command": "-workbench.action.pinEditor",
        "when": "!activeEditorIsPinned"
    },
    {
        "key": "ctrl+k ctrl+p",
        "command": "-workbench.action.showAllEditors"
    },
    {
        "key": "ctrl+k ctrl+shift+\\",
        "command": "-workbench.action.splitEditorInGroup",
        "when": "activeEditorCanSplitInGroup"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "-workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "ctrl+k ctrl+h",
        "command": "-workbench.action.output.toggleOutput",
        "when": "workbench.panel.output.active"
    },
    {
        "key": "ctrl+k z",
        "command": "-workbench.action.toggleZenMode"
    },
    {
        "key": "ctrl+k shift+enter",
        "command": "-workbench.action.unpinEditor",
        "when": "activeEditorIsPinned"
    },
    {
        "key": "ctrl+k f",
        "command": "-workbench.action.closeFolder",
        "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "-editor.action.defineKeybinding",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'jsonc'"
    },
    {
        "key": "ctrl+k ctrl+a",
        "command": "-keybindings.editor.addKeybinding",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "ctrl+k ctrl+e",
        "command": "-keybindings.editor.defineWhenExpression",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "ctrl+k v",
        "command": "-markdown.extension.closePreview",
        "when": "markdownPreviewFocus"
    },
    {
        "key": "ctrl+k f2",
        "command": "-togglePeekWidgetFocus",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
    },
    {
        "key": "ctrl+k down",
        "command": "-views.moveViewDown",
        "when": "focusedView != ''"
    },
    {
        "key": "ctrl+k left",
        "command": "-views.moveViewLeft",
        "when": "focusedView != ''"
    },
    {
        "key": "ctrl+k right",
        "command": "-views.moveViewRight",
        "when": "focusedView != ''"
    },
    {
        "key": "ctrl+k up",
        "command": "-views.moveViewUp",
        "when": "focusedView != ''"
    },
    {
        "key": "ctrl+k p",
        "command": "-workbench.action.files.copyPathOfActiveFile"
    },
    {
        "key": "ctrl+k ctrl+o",
        "command": "-workbench.action.files.openLocalFolder",
        "when": "remoteFileDialogVisible"
    },
    {
        "key": "ctrl+k r",
        "command": "-workbench.action.files.revealActiveFileInWindows"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-workbench.action.showTreeHover",
        "when": "customTreeView && listFocus && !inputFocus"
    }
]
