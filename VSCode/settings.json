// vim: ft=jsonc
{
    "terminal.integrated.fontFamily": "MesloLGS NF",
    "terminal.integrated.fontSize": 12,
    "terminal.integrated.lineHeight": 1,
    "editor.fontFamily": "MesloLGS NF",
    "editor.fontSize": 13,
    "editor.renderControlCharacters": true,
    // Disable current word highlight
    "editor.occurrencesHighlight": false,
    // Disable current line highlight
    "editor.renderLineHighlight": "gutter",
    // Set terminal cursor style
    "terminal.integrated.cursorStyle": "block",
    "terminal.integrated.cursorBlinking": true,
    // Colorscheme
    "workbench.colorTheme": "Cobalt2",
    // Colors
    // Commented to use with Cobalt2 theme
    // "workbench.colorCustomizations": {
    //   // Terminal colors
    //   "terminal.foreground" : "#f8f8f0",
    //   "terminal.background" : "#2d2a2e",
    //   // Line numbers color
    //   "editorLineNumber.foreground": "#999999",
    //   // Active line number color
    //   "editorLineNumber.activeForeground": "#666666",
    //   // Background of Gutter column
    //   "editorGutter.background" : "#232024",
    //   // StatusBar font color
    //   "statusBar.foreground" : "#a8a8a0"
    // },
    // Icons settings
    "workbench.iconTheme": "vscode-icons",
    "editor.rulers": [100, 120],
    "editor.wordWrap": "wordWrapColumn",
    "editor.wrappingIndent": "same",
    // Wrap long lines at N-th column
    "editor.wordWrapColumn": 100,
    "[markdown]": {
        "editor.wordWrap": "wordWrapColumn",
        "editor.quickSuggestions": {
            "comments": "off",
            "strings": "off",
            "other": "off"
        }
    },
    // Show whitespace characters
    "editor.renderWhitespace": "all",
    // Files associations
    "files.associations": {
        "*.ctmpl": "hcl",
        "*.tf": "terraform",
        "*.tfvars": "terraform",
        "[Jj]enkinsfile*": "jenkinsfile"
    },
    "workbench.editorAssociations": {
        "*.ipynb": "jupyter.notebook.ipynb"
    },
    // Open in Vim fullscreen
    "multiCommand.commands": [
        {
            "command": "multiCommand.openInVimFullscreen",
            "sequence": [
                "open-in-vim.open",
                "workbench.action.toggleMaximizedPanel"
            ]
        }
    ],
    // Plugins and extensions settings
    "editor.lineNumbers": "on", // on or relative
    // Kubernetes plugin settings
    "vs-kubernetes": {
        "vscode-kubernetes.minikube-path.linux": "/home/andrei/.vs-kubernetes/tools/minikube/linux-amd64/minikube",
        "vscode-kubernetes.helm-path.linux": "/home/andrei/.vs-kubernetes/tools/helm/linux-amd64/helm"
    },
    "C_Cpp.updateChannel": "Insiders",
    "terminal.external.linuxExec": "/usr/bin/konsole",
    // Python module settings
    "python.formatting.autopep8Args": ["--max-line-length=99"],
    "python.formatting.provider": "yapf", // yapf or autopep8 or black
    "python.formatting.yapfArgs": [
        "--style={based_on_style: google, column_limit: 99, indent_width: 4}"
    ],
    "python.linting.enabled": true,
    "python.linting.flake8Args": ["--max-line-length=99"],
    "python.linting.flake8Enabled": true,
    "python.linting.pycodestyleArgs": ["--max-line-length=99"],
    "python.linting.pycodestyleEnabled": true,
    "python.linting.pydocstyleEnabled": true,
    "python.linting.pylintEnabled": true,
    "python.linting.pylintPath": "pylint",
    "python.analysis.typeCheckingMode": "basic", // basic or strict
    "python.analysis.diagnosticSeverityOverrides": {
        "reportGeneralTypeIssues": "none"
    },
    // MSSQL db connections
    "mssql.connections": [
        {
            "server": "{{put-server-name-here}}",
            "database": "{{put-database-name-here}}",
            "user": "{{put-username-here}}",
            "password": ""
        }
    ],
    // Spell and dictionary settings
    // Spell check only comments for specified languages
    "cSpell.languageSettings": [
        // This one works with Python
        {
            "languageId": "python",
            "includeRegExpList": [
                "/#.*/",
                "/('''|\"\"\")[^\\1]+?\\1/g",
                "strings"
            ]
        },
        // This one works with JavaScript, Typescript, etc
        {
            "languageId": "javascript,typescript",
            "includeRegExpList": ["CStyleComment", "strings"]
        },
        // Use with cpp or c files
        {
            "languageId": "cpp,c",
            // Turn off compound words, because it is only checking strings.
            "allowCompoundWords": false,
            // Only check comments and strings
            "includeRegExpList": ["CStyleComment", "string"],
            // Exclude includes, because they are also strings.
            "ignoreRegExpList": ["/#[ ]*include.*/"]
        }
    ],
    // Custom user words list
    "cSpell.userWords": ["esbenp"],
    // Editor startup
    "workbench.startupEditor": "newUntitledFile",
    // Indentation settings
    "[typescript]": {
        "editor.detectIndentation": true,
        "editor.insertSpaces": true,
        "editor.tabSize": 2
    },
    "[jenkinsfile]": {
        "editor.detectIndentation": true,
        "editor.insertSpaces": true,
        "editor.tabSize": 2
    },
    "[c]": {
        "editor.detectIndentation": true,
        "editor.insertSpaces": false,
        "editor.tabSize": 4
    },
    "[cpp]": {
        "editor.detectIndentation": true,
        "editor.insertSpaces": false,
        "editor.tabSize": 4
    },
    // Terraform settings
    "[terraform]": {
        // Format on file saving
        "editor.formatOnSave": true
    },
    // Characters that will be used as word separators when doing word related navigations or operations
    "editor.wordSeparators": "_`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",
    "commentAnchors.tags.anchors": {
        "DEBUG": {
            "scope": "file",
            "iconColor": "default",
            "highlightColor": "#D75FFF",
            "styleComment": false
        }
    },
    "editor.formatOnSave": true,
    "editor.formatOnSaveMode": "file",
    "editor.codeActionsOnSave": {
        "source.organizeImports": true
    },
    "redhat.telemetry.enabled": false,
    // VSCode neovim
    "extensions.experimental.affinity": {
        "asvetliakov.vscode-neovim": 1
    },
    "vscode-neovim.neovimExecutablePaths.linux": "/home/andrei/.local/share/neovim/bin/nvim",
    "vscode-neovim.neovimInitVimPaths.linux": "/home/andrei/Github/dotfiles/VSCode/vscode-neovim.vim",
    "[jsonc]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "prettier.tabWidth": 4,
    // Disable default json formatter
    "json.format.enable": false,
    // Native bracket pair colorization
    "editor.bracketPairColorization.enabled": true,
    "editor.guides.bracketPairs": "active",
    // Custom tags for the parser to use
    "yaml.customTags": [
        "!And",
        "!If",
        "!Not",
        "!Equals",
        "!Or",
        "!FindInMap sequence",
        "!Base64",
        "!Cidr",
        "!Ref",
        "!Sub",
        "!GetAtt",
        "!GetAZs",
        "!ImportValue",
        "!Select",
        "!Select sequence",
        "!Split",
        "!Join sequence"
    ],
    // Enable/disable default YAML formatter (requires restart)
    "yaml.format.enable": true,
    "terminal.integrated.defaultProfile.linux": "my tmux",
    "terminal.integrated.profiles.linux": {
        "my tmux": {
            "path": "/home/andrei/.local/bin/vscode_terminal.sh"
        }
    },
    "explorer.confirmDragAndDrop": false,
    "groovyLint.enable": false,
    "window.zoomLevel": 1,
    "editor.minimap.enabled": false,
    "code-runner.enableAppInsights": false,
    "code-runner.ignoreSelection": false, // Incompatible with code-runner.runInTerminal: true
    "code-runner.runInTerminal": false,
    "terminal.integrated.commandsToSkipShell": [
        "-code-runner.run",
        "-keybindings.editor.addKeybinding",
        "-keybindings.editor.defineWhenExpression",
        "-markdown.showPreviewToSide",
        "-togglePeekWidgetFocus",
        "-views.moveViewDown",
        "-views.moveViewLeft",
        "-views.moveViewRight",
        "-views.moveViewUp",
        "-workbench.action.closeAllEditors",
        "-workbench.action.closeAllGroups",
        "-workbench.action.closeEditorsInGroup",
        "-workbench.action.closeFolder",
        "-workbench.action.closeUnmodifiedEditors",
        "-workbench.action.editor.changeLanguageMode",
        "-workbench.action.files.copyPathOfActiveFile",
        "-workbench.action.files.openFolder",
        "-workbench.action.files.openLocalFolder",
        "-workbench.action.files.revealActiveFileInWindows",
        "-workbench.action.files.saveWithoutFormatting",
        "-workbench.action.files.showOpenedFileInNewWindow",
        "-workbench.action.focusAboveGroup",
        "-workbench.action.focusBelowGroup",
        "-workbench.action.focusLeftGroup",
        "-workbench.action.focusRightGroup",
        "-workbench.action.joinEditorInGroup",
        "-workbench.action.keepEditor",
        "-workbench.action.keybindingsReference",
        "-workbench.action.moveActiveEditorGroupDown",
        "-workbench.action.moveActiveEditorGroupLeft",
        "-workbench.action.moveActiveEditorGroupRight",
        "-workbench.action.moveActiveEditorGroupUp",
        "-workbench.action.nextEditorInGroup",
        "-workbench.action.openGlobalKeybindings",
        "-workbench.action.output.toggleOutput",
        "-workbench.action.pinEditor",
        "-workbench.action.previousEditorInGroup",
        "-workbench.action.selectTheme",
        "-workbench.action.showAllEditors",
        "-workbench.action.showTreeHover",
        "-workbench.action.splitEditorInGroup",
        "-workbench.action.splitEditorOrthogonal",
        "-workbench.action.toggleZenMode",
        "-workbench.action.unpinEditor",
        "-workbench.files.action.compareWithClipboard",
        "-workbench.files.action.compareWithSaved"
    ],
    "cSpell.enableFiletypes": ["shellscript"]
}
