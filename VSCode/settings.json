{
  // Interface settings
  // Font settings
  "terminal.integrated.fontFamily": "MesloLGS NF",
  "terminal.integrated.fontSize": 12,
  "terminal.integrated.lineHeight":1,
  "editor.fontFamily": "MesloLGS NF",
  "editor.fontSize": 13,
  "editor.renderControlCharacters": true,
  // Disable current word highlight
  "editor.occurrencesHighlight": false,
  // Disable current line highlight
  "editor.renderLineHighlight": "gutter",

  // Colorscheme
  "workbench.colorTheme": "Monokai Pro",

  // Colors
  "workbench.colorCustomizations": {
    // Terminal colors
    "terminal.foreground" : "#f8f8f0",
    "terminal.background" : "#2d2a2e",
    // Line numbers color
    "editorLineNumber.foreground": "#999999",
    // Active line number color
    "editorLineNumber.activeForeground": "#666666",
    // Background of Gutter column
    "editorGutter.background" : "#232024"
  },

  // Icons settings
  "workbench.iconTheme": "vscode-icons",

  // Wrap long lines at 80th column
  "editor.rulers": [80],
  "editor.wordWrap": "wordWrapColumn",
  "editor.wrappingIndent": "same",
  "editor.wordWrapColumn": 80,
  "[markdown]": {
      "editor.wordWrap": "wordWrapColumn",
      "editor.quickSuggestions": false
  },

  // Show whitespace characters
  "editor.renderWhitespace": "all", 

  // Files associations
  "files.associations": {
      "*.ctmpl": "hcl",
      "*.tf": "terraform",
      "*.tfvars": "terraform"
  },
  "workbench.editorAssociations": [
    {
      "viewType": "jupyter.notebook.ipynb",
      "filenamePattern": "*.ipynb"
    }
  ],

  // Open in Vim fullscreen
  "multiCommand.commands": [
    {
        "command": "multiCommand.openInVimFullscreen",
        "sequence": [
            "open-in-vim.open",
            "workbench.action.toggleMaximizedPanel",
        ]
    },
  ],

  // Plugins and extentions settings
  // Vim plugin settings
  "vim.easymotion": true,
  "vim.incsearch": true,
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  "vim.hlsearch": true,
  // Disable VSCodeVim extension
  "vim.disableExtension": false, 
  // In visual mode, start a search with * or # using the current selection
  "vim.visualstar": true,
  // Do not open folds when moving with j/k
  "vim.foldfix": true,
  // Keybinds in Insert mode
  "vim.insertModeKeyBindings": [
  ],
  // Keybinds in Normal mode
  "vim.normalModeKeyBindings": [
    {
        "before": ["<leader>", "m"],
        "commands": [
            "bookmarks.toggle"
        ]
    },
    {
        "before": ["<leader>", "b"],
        "commands": [
            "bookmarks.list"
        ]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<leader>", "d"],
      "after": ["d", "d"]
    },
    // Turn off search highlighting
    {
      "before": ["<C-n>"],
      "commands": [":nohl"]
    },
    {
      "before": ["<Leader>", "/"],
      "commands": [":nohl"]
    },
    // Show commands panel
    {
      "before": ["<Leader>", "p"],
      "commands": ["workbench.action.showCommands"]
    },
    // Show symbols in file
    {
      "before": ["<Leader>", "t"],
      "commands": ["workbench.action.gotoSymbol"]
    },
    // Show symbols in workspace
    {
      "before": ["<Leader>", "a", "t"],
      "commands": ["workbench.action.showAllSymbols"]
    },
    // Easier Tab Handling
    {
      "before": ["<Leader>", "t", "t"],
      "commands": [":tabedit"]
    },
    {
      "before": ["<Leader>", "t", "h"],
      "commands": [":tabfirst"]
    },
    {
      "before": ["<Leader>", "t", "n"],
      "commands": [":tabnext"]
    },
    {
      "before": ["<Leader>", "t", "p"],
      "commands": [":tabprev"]
    },
    {
      "before": ["<Leader>", "t", "l"],
      "commands": [":tablast"]
    },
    {
      "before": ["<Leader>", "t", "d"],
      "commands": [":tabclose"]
    },
    {
      "before": ["<Leader>", "t", "o"],
      "commands": [":tabonly"]
    },
    // Show project files list filter
    {
      "before": ["<Leader>", "f"],
      "commands": ["workbench.action.quickOpen"]
    },
    // Show all editors by most recently used
    {
      "before": ["<Leader>", "<enter>"],
      "commands": ["workbench.action.showAllEditorsByMostRecentlyUsed"]
    },
    // Show all editors by appearance
    {
      "before": ["<Leader>", "<Leader>", "<enter>"],
      "commands": ["workbench.action.showAllEditors"]
    },
    // Find[and Replace] text in all files of project
    {
      "before": ["<Leader>", "r", "g"],
      "commands": ["workbench.action.findInFiles"]
    },
    // Open file in Vim (fullscreen)
    {
      "before": ["<Leader>", "v", "v"],
      // "commands": ["open-in-vim.open"]
      "commands": ["multiCommand.openInVimFullscreen"]
    },
    // Toggle auto hard-wrap long lines
    {
      "before": ["<Leader>", "a", "w"],
      "commands": ["rewrap.toggleAutoWrap"]
    },
    // Spell checking
    // Toggle for current workspace
    {
      "before": ["<Leader>", "s", "s", "a"],
      "commands": ["cSpell.toggleEnableSpellChecker"]
    },
    // Open quickfix list as top menu
    {
      "before": ["z", "="],
      "commands": ["keyboard-quickfix.openQuickFix"],
    },
  ],
  // Keybinds in Visual mode
  "vim.visualModeKeyBindingsNonRecursive": [
    // Paste without overriding the current register
    {
      "before": ["p"],
      "after": ["p", "g", "v", "y"]
    },
  ],
  // Leader key is '\' (back slash) by default
  "vim.leader": "<space>",
  "vim.handleKeys": {
    "<C-a>": true,
    "<C-f>": true,
  },
  // Set a limit on the length of a string 
  "vim.textwidth": 80,

  // Kubernetes plugin settings
  "vs-kubernetes": {
    "vscode-kubernetes.minikube-path.linux": "/home/andrei/.vs-kubernetes/tools/minikube/linux-amd64/minikube",
    "vscode-kubernetes.helm-path.linux": "/home/andrei/.vs-kubernetes/tools/helm/linux-amd64/helm"
  },

  // Terraform settings
  "[terraform]": {
    // Format on file saving
    "editor.formatOnSave": true
  },

  "C_Cpp.updateChannel": "Insiders",
  "terminal.external.linuxExec": "/usr/bin/konsole",

  // Python module settings
  "python.linting.enabled": true,
  "python.linting.pylintUseMinimalCheckers": false,
  "python.linting.pylintEnabled": true,
  "python.linting.flake8Enabled": true,
  "python.linting.pycodestyleEnabled": true,
  "python.linting.pydocstyleEnabled": true,

  // MSSQL db connections
  "mssql.connections": [
    {
      "server": "{{put-server-name-here}}",
      "database": "{{put-database-name-here}}",
      "user": "{{put-username-here}}",
      "password": ""
    }
  ],

  // Spell and dictionary settings
  // Spell check only comments for specified languages
  "cSpell.languageSettings": [
    // This one works with Python
    {
        "languageId": "python",
        "includeRegExpList": [
            "/#.*/",
           "/('''|\"\"\")[^\\1]+?\\1/g",
            "strings"
        ]
    },
    // This one works with JavaScript, Typescript, etc
    {
        "languageId": "javascript,typescript",
        "includeRegExpList": [
            "CStyleComment",
            "strings"
        ]
    },
    // Use with cpp or c files
    {
        "languageId": "cpp,c",
        // Turn off compound words, because it is only checking strings.
        "allowCompoundWords": false,
        // Only check comments and strings
        "includeRegExpList": [
            "CStyleComment",
            "string"
        ],
        // Exclude includes, because they are also strings.
        "ignoreRegExpList": [
            "/#[ ]*include.*/"
        ]
    }
  ],
  // Custom user words list
  "cSpell.userWords": [
  ],
}