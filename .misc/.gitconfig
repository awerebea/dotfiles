[core]
	excludesfile = /home/andrei/.gitignore
	pager = less -x1,5
	autocrlf = input

[includeIf "gitdir:~/"]
	path = ~/.gitconfig.home
[includeIf "gitdir:~/Projects/"]
	path = ~/.gitconfig.work
[includeIf "gitdir:~/work/"]
	path = ~/.gitconfig.work

[merge]
tool = vim_mergetool
conflictstyle = diff3
[mergetool]
	keepBackup = false
[mergetool "vim_mergetool"]
cmd = vim -f -c "MergetoolStart" "$MERGED" "$BASE" "$LOCAL" "$REMOTE"
trustExitCode = true
; [merge]
;     tool = extMerge
; [mergetool "extMerge"]
;     cmd = extMerge \"$BASE\" \"$LOCAL\" \"$REMOTE\" \"$MERGED\"
;     trustExitCode = false

[diff "gpg"]
	textconv = gpg -qd --no-tty
[diff]
	tool = vimdiff

[pager]
	diff = delta
	log = delta
	show = delta
	whatchanged = delta
	show-branch = true
	; status = true

[interactive]
	diffFilter = delta --color-only

[delta]
	features = line-numbers decorations
	whitespace-error-style = 22 reverse
	navigate = true
	tabs = 4
	syntax-theme = zenburn
	; plus-style = syntax "#004000"
	; minus-style = syntax "#5c0809"
	; folke/tokyonight
	minus-style                   = syntax "#37222c"
	minus-non-emph-style          = syntax "#37222c"
	minus-emph-style              = syntax "#713137"
	minus-empty-line-marker-style = syntax "#37222c"
	line-numbers-minus-style      = "#c25d64"
	plus-style                    = syntax "#20303b"
	plus-non-emph-style           = syntax "#20303b"
	plus-emph-style               = syntax "#2c5a66"
	plus-empty-line-marker-style  = syntax "#20303b"
	line-numbers-plus-style       = "#399a96"
	line-numbers-zero-style       = "#3b4261"

[delta "decorations"]
	commit-decoration-style = bold yellow box ul
	file-style = bold yellow ul
	file-decoration-style = none
	hunk-header-decoration-style = cyan box ul

[delta "line-numbers"]
	line-numbers-left-style = cyan
	line-numbers-right-style = cyan
	line-numbers-zero-style = 244
	line-numbers-minus-style = 196
	line-numbers-plus-style = 34
[init]
	defaultBranch = main
[alias]
	ls-files-root = ! git ls-files
	log-merge = "!f() { git log --stat \"$1^..$1\"; }; f"
	log-merge-short = "!f() { git log --pretty=oneline \"$1^..$1\"; }; f"
	fixup = ! git add --update && git commit --fixup=${1:-$(git rev-parse HEAD)} && GIT_EDITOR=true git rebase --interactive --autosquash ${1:-$(git rev-parse HEAD~2)}~1
	root = "rev-parse --show-toplevel"
	find-merge = "!sh -c 'commit=$0 && branch=${1:-HEAD} && (git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n) | sort -k2 -s | uniq -f1 -d | sort -n | tail -1 | cut -f2'"
	show-merge = "!sh -c 'merge=$(git find-merge $0 $1) && [ -n \"$merge\" ] && git show $merge'"
[rerere]
	enabled = 1
[fetch]
	prune = true
[push]
	autoSetupRemote = true
[pull]
	default = current
	; rebase = merges
