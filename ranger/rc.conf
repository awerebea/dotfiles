###SETTINGS###

set column_ratios 2,3,4
#set hidden_filter ^\.|\.(?:pyc|pyo|bak|swp)$|^lost\+found$|^__(py)?cache__$
set hidden_filter ^\.|\.(?:pyc|vrb|pyo|lof|bak|swp|aux|log|nav|out|snm|toc|bcf|run\.xml|synctex\.gz|blg|bbl)$|^lost\+found$|^__(py)?cache__$
set show_hidden true
set confirm_on_delete multiple
set use_preview_script true
set automatically_count_files true
set open_all_images true
set vcs_aware true
set vcs_backend_git local
set vcs_backend_hg disabled
set vcs_backend_bzr disabled
set preview_images true
set preview_images_method ueberzug
set unicode_ellipsis false
set show_hidden_bookmarks false
set colorscheme default
set preview_files false
set preview_directories true
set collapse_preview true
set save_console_history true
set status_bar_on_top false
set draw_progress_bar_in_status_bar true
set draw_borders true
set dirname_in_tabs true
set mouse_enabled true
set display_size_in_main_column true
set display_size_in_status_bar true
set display_tags_in_all_columns true
set update_title false
set update_tmux_title true
set shorten_title 3
set tilde_in_titlebar true
set max_history_size 20
set max_console_history_size 50
set scroll_offset 8
set flushinput true
set padding_right true
set autosave_bookmarks true
set autoupdate_cumulative_size false
set show_cursor false
set sort natural
set sort_reverse false
set sort_case_insensitive true
set sort_directories_first true
set sort_unicode false
set xterm_alt_key true
set cd_bookmarks true
set cd_tab_fuzzy true
set preview_max_size 0
set show_selection_in_titlebar true
set idle_delay 2000
set metadata_deep_search false
set save_tabs_on_exit false
set vcs_msg_length 50
# set viewmode multipane
set viewmode miller
set wrap_plaintext_previews false
set w3m_offset 10
set show_selection_in_titlebar true
# set line_numbers absolute
set line_numbers relative

###ALIASES###
alias e    edit
alias q    quit
alias q!   quit!
alias qa   quitall
alias qa!  quitall!
alias setl setlocal

alias filter     scout -prt
alias find       scout -eiflst --
alias mark       scout -mr
alias unmark     scout -Mr
alias search     scout -rs
alias search_inc scout -rts
alias travel     scout -efiklst

# Columns settings
map i3 chain  set column_ratios=2,3,4;  set display_size_in_main_column=true
map i2 chain  set column_ratios=1,3;    set display_size_in_main_column=false
map ii display_file

###BASIC KEYS###

#BASIC
map     Q quitall
map     q quit
copymap q ZZ ZQ

#map R     reload_cwd
map <C-r> reset
#map <C-l> redraw_window
map <C-c> abort
map <esc> change_mode normal

map ? help
#map W display_log
map w taskview_open
map S shell $SHELL

map :   console
map ;   console shell%space
map !   console shell%space
map @   console -p9 shell -p  %%
map #   console shell -p%space
map .;  console shell -r%space
map .!  console shell -r%space
map .@  console -p10 shell -pr  %%
map .#  console shell -pr%space
map r   chain draw_possible_programs; console open_with%space
map cd  console cd%space

# Binds f
# find
# map ff console find%space
map ff console find%space
map fi console filter%space
map ft console travel%space
map fs fzf_select
map fl fzf_locate
map fz fzf_fasd
# grep tools
map fgg console -p36 shell -p grep -nT -r --color=always  %%
map fgr console -p33 shell -p rg -p -S --stats --trim  %%
map fga console -p34 shell -p ag --color -H -S --stats  %%
# Compare two files
map fcd console -p50 shell -p diff -u --no-dereference --color=always %%
map fcm console -p15 shell -f meld %%
map fcv console -p15 shell vimdiff %%
# Replace string in files with perl
map fr console -p21 shell perl -pi -e 's//g' %%
# Run string replace tool
map fx shell -f regexxer %d

# Yank, paste, copy, move, sync
map yy          chain copy; save_copy_buffer
map ya          chain copy mode=add; save_copy_buffer
map yr          chain copy mode=remove; save_copy_buffer

map yp          yank path
map yd          yank dir
map yn          yank name
map y.          yank name_without_extension
# Save/load copy buffer to cut/copy files between different instances of Ranger
map ys          save_copy_buffer
map yl          load_copy_buffer

map ygc console -p13 shell -s cp %% "`yad --title="Copy To" --file --directory --height=400 --width=500`" # Copy to... using GUI
map ygh shell -w rsync -a --update --progress %d/%f/ "`yad --title='Sync the selected directory with...' --file --height=400 --width=500 --directory`" # Sync highlighted dir with another dir using gui
map ygc shell -w rsync -a --update --progress %d/ "`yad --title='Sync the selected directory with...' --file --height=400 --width=500 --directory`" # Sync current dir with another dir using gui

map y\          shell mkdir copied; cp -t copied `xsel -b -o`     # Copy collected files to 'copied' dir
map .y\         shell -r mkdir copied; cp -t copied `xsel -b -o`  # Copy collected files to 'copied' dir root

# Copy buffered paths to the clipboard
map yc console -p13 shell echo "%%" | sed "s/'\\\\'' '\\\\''/***tEmPseq***/g" | sed "s/' '/'\n'/g" | sed "s/'\\\\''/'/g" | sed "s/\\*\\*\\*tEmPseq\\*\\*\\*/' '/g" | rev | cut -c2- | rev | cut -c2- | xsel --clipboard

map pp          chain load_copy_buffer; paste
map po          chain load_copy_buffer; paste overwrite=True
map pP          chain load_copy_buffer; paste append=True
map pO          chain load_copy_buffer; paste overwrite=True append=True
map pl          chain load_copy_buffer; paste_symlink relative=False
map pL          chain load_copy_buffer; paste_symlink relative=True
map phl         chain load_copy_buffer; paste_hardlink
map pht         chain load_copy_buffer; paste_hardlinked_subtree
map pr          chain load_copy_buffer; paste_as_root
map pd          chain load_copy_buffer; console paste dest=
map p`<any>     chain load_copy_buffer; paste dest=%any_path
map p'<any>     chain load_copy_buffer; paste dest=%any_path

map .pp         chain load_copy_buffer; paste_as_root
map .po         chain load_copy_buffer; paste_as_root overwrite=True
map .pl         chain load_copy_buffer; paste_symlink_as_root

# Sync (s-selected, c-buffered, f-highlighted, S,F- from dir on next tab)
# into current dir :links as links
map pt          console -p22 shell -f rsync -rult %% %d
# into current dir :links as reffered files
map pT          console -p22 shell -f rsync -ruLt %% %d
# into dir on next tab :links as links
map pn          console -p22 shell -f rsync -rult %% %D
# into dir on next tab :links as reffered files
map pN          console -p22 shell -f rsync -ruLt %% %D
# into highlighted dir :links as links
map pHt         console -p22 shell -f rsync -rult %% %d/%f/
# into highlighted dir :links as referred files
map pHT         console -p22 shell -f rsync -ruLt %% %d/%f/
# Same as the previous block, only root
map .pt         console -p24 shell -rf rsync -arult %% %d
map .pT         console -p24 shell -rf rsync -aruLt %% %d
map .pn         console -p24 shell -rf rsync -arult %% %D
map .pN         console -p24 shell -rf rsync -aruLt %% %D
map .pHt        console -p24 shell -rf rsync -arult %% %d/%f/
map .pHT        console -p24 shell -rf rsync -aruLt %% %d/%f/

# mkdir, touch
map at          console shell touch%space
map am          console shell mkdir -p%space
map .at         console shell -r touch%space
map .am         console shell -r mkdir -p%space

# Dragon Mapping
map dr          console -p20 shell dragon -a -x %%
# dragon-stay
map ds          console -p20 shell dragon -a %%
# dragon-individual
map di          console -p20 shell dragon %%
# mvdragon
map dm          shell mvdragon
# cpdragon
map dc          shell cpdragon
# dlfile
map dl          shell dlfile
# Same as the previous block, only root
map .dr         console -p23 shell -r dragon -a -x %%
map .ds         console -p23 shell -r dragon -a %%
map .di         console -p23 shell -r dragon %%
map .dm         shell -r mvdragon
map .dc         shell -r cpdragon
map .dl         shell -r dlfile

# Move (s-selected, c-buffered, f-highlighted, S,F- from dir on next tab) into current dir
map dt         console -p13 shell -f mv %% %d/
# Move (s-selected, c-buffered, f-highlighted, S,F- from dir on next tab) into dir on next tab
map dn         console -p13 shell -f mv %% %D/
# Move (s-selected, c-buffered, f-highlighted, S,F- from dir on next tab) into highlighted dir
map dh         console -p13 shell -f mv %% %d/%f/
# Same as the previous block, only root
map .dt        console -p17 shell -rf mv -f %% %d/
map .dn        console -p17 shell -rf mv -u %% %D/
map .dh        console -p17 shell -rf mv -f %% %d/%f/

map dg          console -p13 shell -s mv %% "`yad --title="Move To" --file --directory --height=400 --width=500`" # Move to... using GUI

map d\          shell mkdir moved; mv -t moved `xsel -b -o`       # Move collected files to 'moved' dir
map .d\         shell -r mkdir moved; mv -t moved `xsel -b -o`    # Move collected files to 'moved' dir  root

# Trash Mappings
map D   shell trash-put %s
map tl  shell -p trash-list
map te  shell trash-empty
map tr  shell trash-restore
map .D  shell -r trash-put %s
map .tl shell -pr trash-list
map .te shell -r trash-empty
map .tr shell -r trash-restore

# Archive Mappings
# pack 7z
map e7         console -p17 shell ranger_7z %%
# pack tar.bz2
map eb         console -p21 shell ranger_tarbz2 %%
# pack tar.gz
map eg         console -p20 shell ranger_targz %%
# pack tar
map et         console -p18 shell ranger_tar %%
# pack zip
map ez         console -p18 shell ranger_zip %%
# extract to curr dir
map ex         console -p22 shell ranger_extract %%
# Same as the previous block, only root
map .e7        console -p20 shell -r ranger_7z %%
map .eb        console -p24 shell -r ranger_tarbz2 %%
map .eg        console -p23 shell -r ranger_targz %%
map .et        console -p21 shell -r ranger_tar %%
map .ez        console -p21 shell -r ranger_zip %%
map .ex        console -p25 shell -r ranger_extract %%

# Change the line mode
map Ma         console -p11 meta title%space %s
map Mf         linemode filename
map Mi         linemode fileinfo
map Mm         linemode metatitle
map Mp         linemode permissions
map Ms         linemode sizemtime
map Mt         linemode mtime

# Tagging / Marking
map ta         tag_toggle
map ut         tag_remove
map "<any>     tag_toggle tag=%any
map <Space>    mark_files toggle=True
map va         mark_files all=True toggle=True
map vi         mark_files all=True toggle=True
map uv         mark_files all=True val=False
map V          toggle_visual_mode
map uV         toggle_visual_mode reverse=True
map uu         chain mark_files all=True val=False; uncut; save_copy_buffer

# For the nostalgics: Midnight Commander bindings
map <F1>       help
map <F3>       display_file
map <F4>       edit
map <F5>       copy
map <F5>       redraw_window
map <F6>       cut
map <F7>       console shell mkdir -p%space
map <F8>       console delete
map <F10>      exit
map .<F7>      console shell -r mkdir -p%space
map .<F8>      console shell -r rm -rf %s

# In case you work on a keyboard with dvorak layout
map <UP>       move up=1
map <DOWN>     move down=1
map <LEFT>     move left=1
map <RIGHT>    move right=1
map <HOME>     move to=0
map <END>      move to=-1
map <PAGEDOWN> move down=1   pages=True
map <PAGEUP>   move up=1     pages=True
map <CR>       move right=1
map <DELETE>   trash_with_confirmation
map <INSERT>   console touch%space

# VIM-like
copymap <UP>       k
copymap <DOWN>     j
copymap <LEFT>     h
copymap <RIGHT>    l
copymap <HOME>     gg
copymap <END>      G
copymap <PAGEDOWN> <C-F>
copymap <PAGEUP>   <C-B>

map J  move down=0.5  pages=True
map K  move up=0.5    pages=True
copymap J <C-D>
copymap K <C-U>

# Jumping around
map H     history_go -1
map L     history_go 1
map ]     move_parent 1
map [     move_parent -1
map }     traverse

#DEFAULT MOVEMENT
map ge cd /etc
map gn cd /etc/nginx
map gh cd ~
map gl cd ~/.local
map gc cd ~/Clouds
map gC cd ~/.config
map gD cd ~/Documents
map gd cd ~/Downloads
map gG cd ~/Github
map gp cd ~/Projects
map gu cd /usr
map gb cd /usr/local/bin
map gB cd ~/.local/bin
map gv cd /var
map gw cd ~/work
map gM cd /mnt
map gma cd /media/andrei
map gmd cd /media/andrei/Data/Distrib
map gmc cd /media/andrei/Data/Clouds
map gmg cd /media/andrei/Data/Clouds/Google\ Drive
map gmy cd /media/andrei/Data/Clouds/YandexDisk
map gms cd /media/andrei/shares
map gr cd /
map gR eval fm.cd(ranger.RANGERDIR)
map g? cd /usr/share/doc/ranger
map gs cd -r %f
map gL cd -r %f

# Tabs
map <C-n>     tab_new
map <C-w>     tab_close
map <TAB>     tab_move 1
map <S-TAB>   tab_move -1
map <A-Right> tab_move 1
map <A-Left>  tab_move -1
map gt        tab_move 1
map gT        tab_move -1
# map gn        tab_new
# map gc        tab_close
map tt        tab_close
map uq        tab_restore
map <a-1>     tab_open 1
map <a-2>     tab_open 2
map <a-3>     tab_open 3
map <a-4>     tab_open 4
map <a-5>     tab_open 5
map <a-6>     tab_open 6
map <a-7>     tab_open 7
map <a-8>     tab_open 8
map <a-9>     tab_open 9
map <a-h>     tab_shift 1
map <a-l>     tab_shift -1

# External Programs
map E edit
map <a-e> console shell -f x-terminal-emulator -e ${EDITOR} %%
map du shell -p du --max-depth=1 -h --apparent-size
map dU shell -p du --max-depth=1 -h --apparent-size | sort -rh
map code console shell code %d

# Open
map Ocf       shell -f code %f                   #open with VSCode file
map Ocd       shell -f code %d                   #open with VSCode dir

map On        shell -f x-terminal-emulator -e nano %f       # open file forked in nano
map Ol        shell -f x-terminal-emulator -e less %f       # open forked to view with less
map Ov        shell -f x-terminal-emulator -e vim %f        # open forked to view in vim
map Oe        shell -f x-terminal-emulator -e ${EDITOR} %f  # open forked to view in EDITOR
map Oo        console shell -f xdg-open %%
map Od        shell -f xdg-open %d                          # open current directory in file manager
map .On       shell -rf x-terminal-emulator -e nano %f       # open file forked in nano
map .Ol       shell -rf x-terminal-emulator -e less %f       # open forked to view with less
map .Ov       shell -rf x-terminal-emulator -e vim %f        # open forked to view in vim
map .Oe       shell -rf x-terminal-emulator -e ${EDITOR} %f  # open forked to view in EDITOR

# Filesystem Operations
map ch   console -p20 shell ranger_chmod %%
map .ch  console -p23 shell -r ranger_chmod %%
map cw   console rename%space
map cW   bulkrename %s
map br   bulkrename %s
map aa   rename_append
map A    eval fm.open_console('rename ' + fm.thisfile.relative_path)
map I    eval fm.open_console('rename ' + fm.thisfile.relative_path, position=7)
map .A   console shell -r mv %f%space%f
map .I   chain console shell -r mv %f%space%f; eval fm.ui.console.move_word(left=1)

map dd chain cut; save_copy_buffer
map ud chain uncut; save_copy_buffer
map da chain cut mode=add; save_copy_buffer
# map dr chain cut mode=remove; save_copy_buffer

# Searching
map /  console search%space
map n  search_next
map N  search_next forward=False
map ct search_next order=tag
map cs search_next order=size
map ci search_next order=mimetype
map cc search_next order=ctime
map cm search_next order=mtime
map ca search_next order=atime

# Sorting
map or toggle_option sort_reverse
map oz set sort=random
map os chain set sort=size;      set sort_reverse=False
map ob chain set sort=basename;  set sort_reverse=False
map on chain set sort=natural;   set sort_reverse=False
map om chain set sort=mtime;     set sort_reverse=False
map oc chain set sort=ctime;     set sort_reverse=False
map oa chain set sort=atime;     set sort_reverse=False
map ot chain set sort=type;      set sort_reverse=False
map oe chain set sort=extension; set sort_reverse=False

map oS chain set sort=size;      set sort_reverse=True
map oB chain set sort=basename;  set sort_reverse=True
map oN chain set sort=natural;   set sort_reverse=True
map oM chain set sort=mtime;     set sort_reverse=True
map oC chain set sort=ctime;     set sort_reverse=True
map oA chain set sort=atime;     set sort_reverse=True
map oT chain set sort=type;      set sort_reverse=True
map oE chain set sort=extension; set sort_reverse=True

map dc get_cumulative_size
map dz chain mark_files all=True toggle=True; get_cumulative_size; mark_files all=True toggle=True

##### directory ##########
map ,dc shell -s find . -type d -exec mkdir -p -- ../tree_clone/{} \; # Clone the dir tree of current dir in empty dir 1 level up
map ,do shell -rs chown -R $USER %f                                   # Change ownership of dir to user (recursively)
map ,dx console shell -f find . -type d -maxdepth 1 -empty -delete    # Remove empty directories in current dir
map ,di shell -p echo -e "$PWD" && echo `echo $(find . -type d -printf x | wc -c)-1 | bc` folders `find . -type f -printf x | wc -c` files `du -chs --apparent-size | grep 'total' | cut -f1` # Count files and folders at current dir, recursively
map ,df shell -p df -h --output=target,size,avail,used,pcent,source | head -n 1 && df -h --output=target,size,avail,used,pcent,source -x tmpfs -x devtmpfs -x vfat | awk '{print $NF,$0}' | sed '1d;' | sort -V | cut -f2- -d' '
# Compare two directories
map ,dcd console -p36 shell -p diff -qr --no-dereference %% | diffstat
map ,dcm console -p15 shell -f meld %%

# .v
map ,vm set viewmode miller
map ,vt set viewmode multipane

# Settings
map zc    toggle_option collapse_preview
map zd    toggle_option sort_directories_first
map zh    toggle_option show_hidden
map <C-h> toggle_option show_hidden
map zi    toggle_option flushinput
map zm    toggle_option mouse_enabled
map zp    toggle_option preview_files
map zP    toggle_option preview_directories
map zs    toggle_option sort_case_insensitive
map zu    toggle_option autoupdate_cumulative_size
map zv    toggle_option use_preview_script

# custom keybinds
map zz    console fasd%space
map <C-g> fzm
map ug    dmark
map ga    console fmark%space

# Bookmarks
map `<any>  enter_bookmark %any
map '<any>  enter_bookmark %any
map m<any>  set_bookmark %any
map um<any> unset_bookmark %any

map m<bg> draw_bookmarks
copymap m<bg> um<bg> `<bg> '<bg> p`<bg> p'<bg>

###CONSOLE KEYS###
# Basic
cmap <tab>   eval fm.ui.console.tab()
cmap <s-tab> eval fm.ui.console.tab(-1)
cmap <ESC>   eval fm.ui.console.close()
cmap <CR>    eval fm.ui.console.execute()
#cmap <C-l>   redraw_window

copycmap <ESC> <C-c>
copycmap <CR>  <C-j>

# Move around
cmap <up>    eval fm.ui.console.history_move(-1)
cmap <down>  eval fm.ui.console.history_move(1)
cmap <left>  eval fm.ui.console.move(left=1)
cmap <right> eval fm.ui.console.move(right=1)
cmap <home>  eval fm.ui.console.move(right=0, absolute=True)
cmap <end>   eval fm.ui.console.move(right=-1, absolute=True)
cmap <a-b>   eval fm.ui.console.move_word(left=1)
cmap <a-f>   eval fm.ui.console.move_word(right=1)

# Line Editing
cmap <backspace>  eval fm.ui.console.delete(-1)
cmap <delete>     eval fm.ui.console.delete(0)
cmap <C-w>        eval fm.ui.console.delete_word()
cmap <A-d>        eval fm.ui.console.delete_word(backward=False)
cmap <C-k>        eval fm.ui.console.delete_rest(1)
cmap <C-u>        eval fm.ui.console.delete_rest(-1)
cmap <C-y>        eval fm.ui.console.paste()

# Note: There are multiple ways to express backspaces.  <backspace> (code 263)
# and <backspace2> (code 127).  To be sure, use both.
copycmap <backspace> <backspace2>

# This special expression allows typing in numerals:
cmap <allow_quantifiers> false

###PAGER KEYS###
# Movement
pmap  <down>      pager_move  down=1
pmap  <up>        pager_move  up=1
pmap  <left>      pager_move  left=4
pmap  <right>     pager_move  right=4
pmap  <home>      pager_move  to=0
pmap  <end>       pager_move  to=-1
pmap  <pagedown>  pager_move  down=1.0  pages=True
pmap  <pageup>    pager_move  up=1.0    pages=True
pmap  <C-d>       pager_move  down=0.5  pages=True
pmap  <C-u>       pager_move  up=0.5    pages=True

copypmap <UP>       k  <C-p>
copypmap <DOWN>     j  <C-n> <CR>
copypmap <LEFT>     h
copypmap <RIGHT>    l
copypmap <HOME>     g
copypmap <END>      G
copypmap <C-d>      d
copypmap <C-u>      u
copypmap <PAGEDOWN> n  f  <C-F>  <Space>
copypmap <PAGEUP>   p  b  <C-B>


# Basic
#pmap     <C-l> redraw_window
pmap     <ESC> pager_close
copypmap <ESC> q Q i <F3>
pmap E      edit_file

# ===================================================================
# == Taskview Keybindings
# ===================================================================

# Movement
tmap <up>        taskview_move up=1
tmap <down>      taskview_move down=1
tmap <home>      taskview_move to=0
tmap <end>       taskview_move to=-1
tmap <pagedown>  taskview_move down=1.0  pages=True
tmap <pageup>    taskview_move up=1.0    pages=True
tmap <C-d>       taskview_move down=0.5  pages=True
tmap <C-u>       taskview_move up=0.5    pages=True

copytmap <UP>       k  <C-p>
copytmap <DOWN>     j  <C-n> <CR>
copytmap <HOME>     g
copytmap <END>      G
copytmap <C-u>      u
copytmap <PAGEDOWN> n  f  <C-F>  <Space>
copytmap <PAGEUP>   p  b  <C-B>

# Changing priority and deleting tasks
tmap J          eval -q fm.ui.taskview.task_move(-1)
tmap K          eval -q fm.ui.taskview.task_move(0)
tmap dd         eval -q fm.ui.taskview.task_remove()
tmap <pagedown> eval -q fm.ui.taskview.task_move(-1)
tmap <pageup>   eval -q fm.ui.taskview.task_move(0)
tmap <delete>   eval -q fm.ui.taskview.task_remove()

# Basic
#tmap <C-l> redraw_window
tmap <ESC> taskview_close
copytmap <ESC> q Q w <C-c>

#General
map vim console shell vim%space
map tf toggle_flat
map <F12> console flat%space

eval cmd('source ' + fm.confpath('shortcuts.conf'))

default_linemode devicons

setlocal path=~/Downloads sort=ctime
# setlocal path=~/projects preview_files=true
# setintag c sort=ctime
